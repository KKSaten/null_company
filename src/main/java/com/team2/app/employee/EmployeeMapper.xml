<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team2.app.employee.EmployeeMapper">


	<select id="getList" resultMap="employeeInfo">
		SELECT E.*, R.*, D.*, P.*, EF.*
		FROM EMPLOYEE E
			INNER JOIN
			ROLE R
			ON (E.ROLE_NUM=R.ROLE_NUM)
			INNER JOIN
			DEPARTMENT D
			ON (E.DEPT_NUM=D.DEPT_NUM)
			INNER JOIN
			POSITIONS P
			ON (E.POS_NUM=P.POS_NUM)
			INNER JOIN
			EMP_FILE EF
			ON (E.EMP_NUM=EF.EMP_NUM)
	</select>
	
	<select id="getRole" parameterType="EmployeeVO" resultType="com.team2.app.role.RoleVO">
		SELECT *
		FROM ROLE
		<if test="roleNum != null">
			WHERE ROLE_NUM = #{roleNum}
		</if>	
	</select>
	
	<select id="getDept" parameterType="EmployeeVO" resultType="com.team2.app.department.DepartmentVO">
		SELECT *
		FROM DEPARTMENT
		<if test="deptNum != null">
			WHERE DEPT_NUM = #{deptNum}
		</if>	
	</select>
	
	<select id="getPos" parameterType="EmployeeVO" resultType="com.team2.app.positions.PositionsVO">
		SELECT *
		FROM POSITIONS
		<if test="posNum != null">
			WHERE POS_NUM = #{posNum}
		</if>
	</select>
	
	<update id="delete" parameterType="EmployeeVO">
		UPDATE EMPLOYEE
		SET ENABLED = 0
		WHERE EMP_NUM = #{empNum}
	</update>

	<!-- 직원 사진 파일명 입력 -->
	<insert id="saveFile" parameterType="EmployeeFileVO">
		INSERT INTO EMP_FILE (EMP_NUM, FILE_NAME, ORI_NAME)
		VALUES (#{empNum}, #{fileName}, #{oriName})
	</insert>
	
	<update id="fileUpdate" parameterType="EmployeeFileVO">
		UPDATE EMP_FILE
		SET ORI_NAME = #{oriName}
		WHERE FILE_NUM = #{fileNum}
	</update>
	
	<update id="addrUpdate" parameterType="EmployeeVO">
		UPDATE EMPLOYEE
		SET EMP_ADDRESS = #{empAddress}
		WHERE EMP_NUM = #{empNum}
	</update>

	<!-- 로그인 기능 -->
	<select id="login" parameterType="EmployeeVO"
		resultMap="employeeInfo">
		SELECT E.*, R.*, D.*, P.*, EF.*
		FROM EMPLOYEE E
			INNER JOIN
			ROLE R
			ON (E.ROLE_NUM=R.ROLE_NUM)
			INNER JOIN
			DEPARTMENT D
			ON (E.DEPT_NUM=D.DEPT_NUM)
			INNER JOIN
			POSITIONS P
			ON (E.POS_NUM=P.POS_NUM)
			INNER JOIN
			EMP_FILE EF
			ON (E.EMP_NUM=EF.EMP_NUM)
		WHERE E.EMP_Id = #{empId}
	</select>
	
	<resultMap type="EmployeeVO" id="employeeInfo">
		<id property="empNum" column="EMP_NUM"/>
		<result property="empId" column="EMP_ID"/>
		<result property="empName" column="EMP_NAME"/>
		<result property="empPwd" column="EMP_PWD"/>
		<result property="empRegistry" column="EMP_REGISTRY"/>
		<result property="empGender" column="EMP_GENDER"/>
		<result property="empAddress" column="EMP_ADDRESS"/>
		<result property="roleNum" column="ROLE_NUM"/>
		<result property="deptNum" column="DEPT_NUM"/>
		<result property="posNum" column="POS_NUM"/>
		<result property="hiredate" column="HIREDATE"/>
		<result property="outdate" column="OUTDATE"/>
		<result property="enabled" column="ENABLED"/>
		
		<association property="employeeFileVO" javaType="EmployeeFileVO">
			<id property="fileNum" column="FILE_NUM"/>
			<result property="fileName" column="FILE_NAME"/>
			<result property="oriName" column="ORI_NAME"/>
		</association>
		
		<association property="roleVO" javaType="com.team2.app.role.RoleVO">
			<id property="roleNum" column="ROLE_NUM"/>
			<result property="roleName" column="ROLE_NAME"/>
		</association>
		
		<association property="deptVO" javaType="com.team2.app.department.DepartmentVO">
			<id property="deptNum" column="DEPT_NUM"/>
			<result property="deptName" column="DEPT_NAME"/>
		</association>
		
		<association property="posVO" javaType="com.team2.app.positions.PositionsVO">
			<id property="posNum" column="POS_NUM"/>
			<result property="posName" column="POS_NAME"/>
		</association>
		
	</resultMap>
	
	<!-- 직원 등록 -->
	<insert id="join" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="num">
		INSERT INTO EMPLOYEE (EMP_ID, EMP_PWD, EMP_NAME, EMP_REGISTRY, EMP_GENDER, EMP_ADDRESS, ROLE_NUM, DEPT_NUM, POS_NUM)
		VALUES (#{employeeVO.empId}, #{employeeVO.empPwd}, #{employeeVO.empName}, #{employeeVO.empRegistry}, #{employeeVO.empGender}, #{employeeVO.empAddress}, #{employeeVO.roleNum}, #{employeeVO.deptNum}, #{employeeVO.posNum})
	</insert>
	
	<update id="chpass" parameterType="EmployeeVO">
		UPDATE EMPLOYEE
		SET EMP_PWD =
		#{empPwd}
		WHERE EMP_ID = #{empId}
	</update>
	
	<select id="empList" resultType="EmployeeVO">
		SELECT *
		FROM 
		    EMPLOYEE E
		LEFT JOIN 
		    DEPARTMENT D ON E.DEPT_NUM = D.DEPT_NUM  
		LEFT JOIN 
		    POSITIONS P ON E.POS_NUM = P.POS_NUM  
		LEFT JOIN 
		    ROLE R ON E.ROLE_NUM = R.ROLE_NUM   

</select>

<update id="empListUpdate" parameterType="EmployeeVO">
UPDATE EMPLOYEE E
SET 
    E.DEPT_NUM = #{deptNum},        -- 새 부서 번호
    E.POS_NUM = #{posNum},          -- 새 직책 번호 추가
    E.ROLE_NUM = #{roleNum}       -- 새 직책 번호
WHERE 
    E.EMP_NUM = #{empNum};          -- 업데이트할 직원 번호
 
</update>
<insert id="empListInsert" parameterType="EmployeeVO">
INSERT INTO ORDERS (
    APPOINTMENT_DATE, 
    ORDER_DATE, 
    ORDER_SITUATION, 
    EMP_NUM, 
    DEPARTMENT_NUM, 
    POS_NUM,               -- 직책 번호
    ROLE_NUM               -- 역할 번호
) VALUES (
    CURDATE(),                  -- 발령 일자
    NOW(),                      -- 등록일자
    1,                          -- 발령 확정 (true)
    #{empNum},                 -- 실제 사원번호 (업데이트한 직원 번호)
    #{deptNum},                -- 변경된 부서 번호
    #{posNum},                 -- 변경된 직책 번호 (POS_NUM)
    #{roleNum}                 -- 변경된 직급 번호 (ROLE_NUM)
);
</insert>

</mapper>